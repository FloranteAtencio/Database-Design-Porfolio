Tarlac EcoTourism Adventure Trail
1st Normal Form:
•	Each attribute should contain atomic value.
•	A column should contain value from the same domain.
•	Each column should have a unique name. 
•	No ordering to rows and columns.
•	No duplicate rows.
2ND Normal Form
•	It must be 1st Normal Form.
•	No Patial dependency in the relation (Partial dependency occurs when the left-hand side of a candidate key points non-prime attributes).
3rd Normal Form
•	It must be 2nd Normal Form.																         
•	No transitive dependency for non-prime attributes (To be non-transitive and 3NF at least one of these must be true: Either the left-hand side of functional dependency is super key or the right-hand side points to a prime attribute).
BCNF
•	if it is 3NF. 
•	for each non-trivial dependency x -> y.  x  must be a super key.
Preserving Dependency Decomposition
•	is another property of decomposed relational database schema D in which each functional dependency X -> Y specified in F either appeared directly in one of the relation schemas Ri in the decomposed D or could be inferred from the dependencies that appear in some Ri.

Lossless Join Decomposition
•	Lossless join decomposition is a decomposition of a relation R into relations R1, R2 such that if we perform a natural join of relation R1 and R2, it will return the original relation R. This is effective in removing redundancies from databases while preserving the original data.

Database Relations
R:{
	1	2	3	4	5	6	7	8	9	10	11	12	13	14	15	16	17	18	19	20	21	22	23	24	25	26
27	28	29	30	31	32	33	34	35	36	
}

FD {1 -> 2 to 6 Customers,    7-> 8 to 11 TourGuides, 12 ->13 to 17 location,  18 -> 12, 19 20 Activity,  21 -> 12 22,23 Tours   24->25, 26, 27, 21, 1, 7 Booking     28 -> 29 to 32, 24 schedule  33 -> 34, 35, 36, 1, 7 , 21 reviews
}

Customers
R:{
1	2	3	4	5	6	
}
FD :{ 1 -> 2 to 6} Highest Normal Form(BCNF) CK:{1}
CREATE TABLE [Customers] (
  [PK_Customer] INT PK,
  [FirstName] NVARCHAR(100),
  [LastName] NVARCHAR(100),
  [MiddleName] NVARCHAR(100),
  [Email] NVARCHAR(100),
  [Address] TEXT
);




Tour Guides
R:{
7	8	9	10	11	
}	
FD:{ 7-> 8 to 11}     Highest Normal Form(BCNF) CK:{7}
CREATE TABLE [TourGuides] (
  [PK_Guides] INT PK,
  [firstNam] NVARCHAR(10),
  [LastNam] NVARCHAR(100),
  [Contact] NVARCHAR(50),
  [Bio] Text
);




location
R:{
12 13 14 15 16 17	
}
FD:{12 ->13 to 17 } Highest Normal Form(BCNF) CK:{12}
CREATE TABLE [Location] (
  [PK_location] INT PK,
  [Municipality] NVARCHAR(100),
  [City] NVARCHAR(100),
  [Region] NVARCHAR(100),
  [Description] TEXT,
  [History] TEXT,
  CONSTRAINT [FK_Location.PK_location]
    FOREIGN KEY ([PK_location])
      REFERENCES [Tours]([PK_Location])
);

Activity
R:{
18	19	20				
}
FD:{ 18 -> 12, 19 20 } Highest Normal Form{BCNF} CK:{18}
CREATE TABLE [Activity] (
  [PK_Activity] INT PK,
  [Activity] NVARCHAR(100),
  [FK_Location] INT,
  [Description] TEXT,
  CONSTRAINT [FK_Activity.FK_Location]
    FOREIGN KEY ([FK_Location])
      REFERENCES [Location]([PK_location])
);



Tours
R:{
21, 22, 23
}
FD:{ 21 -> 12 22,23  } Highest Normal Form{2NF} CK:{21}
CREATE TABLE [Tours] (
  [PK_Tour] INT PK,
  [TourNam] NVARCHAR(100),
  [Description] TEXT,
  [FK_Location] INT ,
  [Price] Decimal(10,2)
);


Booking
R:{
24	25	26	27				
}
FD:{ 24->25, 26, 27, 21, 1, 7  } Highest Normal Form{BCNF} CK:{24}
CREATE TABLE [Booking] (
  [PK_Booking] INT PK,
  [FK_Tour] INT ,
  [FK_Customer] INT ,
  [FK_Guide] INT,
  [BookingDate] DateTime,
  [Confirmation] Bit,
  [Paid] Nvarchar(100),
  CONSTRAINT [FK_Booking.PK_Booking]
    FOREIGN KEY ([PK_Booking])
      REFERENCES [Schedule]([FK_Booking]),
  CONSTRAINT [FK_Booking.FK_Customer]
    FOREIGN KEY ([FK_Customer])
      REFERENCES [Customers]([PK_Customer]),
  CONSTRAINT [FK_Booking.FK_Guide]
    FOREIGN KEY ([FK_Guide])
      REFERENCES [TourGuides]([PK_Guides]),
  CONSTRAINT [FK_Booking.FK_Tour]
    FOREIGN KEY ([FK_Tour])
      REFERENCES [Tours]([PK_Tour])
);



schedule
R:{
28 29 31 32		
}
FD:{ 28 -> 29 to 32, 24} Highest Normal Form{BCNF} CK:{31}
CREATE TABLE [Schedule] (
  [PK_Schedule] INT PK,
  [FK_Booking] INT ,
  [ArrivalDate] DateTime,
  [DepartureDate] DateTime,
  [Description] Text,
  [Duration] INT
);



Reviews
R:{
33 	34	35	36		
}
FD:{ 33 -> 34, 35, 36, 1, 7 , 21 } Highest Normal Form{BCNF} CK:{33}
CREATE TABLE [Reviews] (
  [PK_Revies] INT PK,
  [FK_Tour] INT ,
  [FK_Customer] INT,
  [Rating] INT,
  [Comment] DateTime,
  [FK_Guide] INT,
  [GuideRating] INT,
  CONSTRAINT [FK_Reviews.FK_Customer]
    FOREIGN KEY ([FK_Customer])
      REFERENCES [Customers]([PK_Customer]),
  CONSTRAINT [FK_Reviews.FK_Guide]
    FOREIGN KEY ([FK_Guide])
      REFERENCES [TourGuides]([PK_Guides]),
  CONSTRAINT [FK_Reviews.FK_Tour]
    FOREIGN KEY ([FK_Tour])
      REFERENCES [Tours]([PK_Tour])
);
