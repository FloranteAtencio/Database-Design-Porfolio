BakedCraftPH Database
1st Normal Form:
•	Each attribute should contain atomic value.
•	A column should contain value from the same domain.
•	Each column should have a unique name. 
•	No ordering to rows and columns.
•	No duplicate rows.
2ND Normal Form
•	It must be 1st Normal Form.
•	No Patial dependency in the relation (Partial dependency occurs when the left-hand side of a candidate key points non-prime attributes).
3rd Normal Form
•	It must be 2nd Normal Form.																         
•	No transitive dependency for non-prime attributes (To be non-transitive and 3NF at least one of these must be true: Either the left-hand side of functional dependency is super key or the right-hand side points to a prime attribute).
BCNF
•	if it is 3NF. 
•	For each functional dependency there must be a super key.
Preserving Dependency Decomposition
•	is another property of decomposed relational database schema D in which each functional dependency X -> Y specified in F either appeared directly in one of the relation schemas Ri in the decomposed D or could be inferred from the dependencies that appear in some Ri.

Lossless Join Decomposition
•	Lossless join decomposition is a decomposition of a relation R into relations R1, R2 such that if we perform a natural join of relation R1 and R2, it will return the original relation R. This is effective in removing redundancies from databases while preserving the original data.

Database Relations
R:{
	1	2	3	4	5	6	7	8	9	10	11	12	13	14	15	16	17	18	19	20	21	22	23	24	25	26
27	28	29	30	31	32	33	34	35	36	37	38	39	40	41	42	43	44	45	46 		
}

FD {1 -> 2 to 6 Products, 7->1, 8 to 11 ProductMade, 12 ->1, 13, 14 Orders, 15 ->12, 18, 1, 16, 17 orderDetails, 18 ->22, 19, 20, 21 paymentMethod, 22->23 to 27 shareHolder, 
28 ->22, 29, 30, 31 share  32 -> 33,34,35 materialStats   36,-> 28, 32, 37 to 42 MaterialAdded
42 -> 36, 43 expensesLog, 44 -> 28, 45 to 48 Neccesity, 1, 32 -> 1, 32 MaterialNeeded }

FD :{ 22->23 to 27} shareHolder Form(BCNF) CK:{22}
CREATE TABLE `ShareHolder` (
  `PK_shareholder` VARCHAR(10) PRIMARY KEY,
  `First` VARCHAR(50),
  `Middle` VARCHAR(50),
  `Last` VARCHAR(50),
  `contact` VARCHAR(13),
  `email` VARCHAR(40)
);

FD :{28 ->22, 29, 30, 31 } share Form(BCNF) CK:{28}
CREATE TABLE `Share` (
  `PK_share` VARCHAR(10) PRIMARY KEY,
  `Shared` DECIMAL(10,2),
  `FK_shareholder` VARCHAR(10),
  `Date` DATETIME,
  `description` TEXT,
  FOREIGN KEY (`FK_shareholder`) REFERENCES `ShareHolder`(`PK_shareholder`)
);

FD :{32 -> 33,34,35 } MaterialStats Form(BCNF) CK:{32}
CREATE TABLE `MaterialStats` (
  `Stock` INT,
  `Description` Text,
  `Status` VARCHAR(10),
  `PK_material` VARCHAR(10) PRIMARY KEY
);

FD :{ 36,-> 28, 32, 37 to 42 } MaterialsAdded Form(BCNF) CK:{36}
CREATE TABLE `MaterialsAdded` (
  `PK_materialAdded` VARCHAR(10) PRIMARY KEY,
  `FK_material` VARCHAR(10) ,
  `description` TEXT,
  `quantity` INT,
  `price` DECIMAL(10,2),
  `unit` VARCHAR(50),
  `date` DATE,
  `FK_share` VARCHAR(10),
  FOREIGN KEY (`FK_share`) REFERENCES `ShareHolder`(`PK_shareholder`),
  FOREIGN KEY (`FK_material`) REFERENCES `MaterialStats`(`PK_material`)
);

FD :{ 344 -> 28, 45 to 48 }  Neccesity Form(BCNF) CK:{44}
CREATE TABLE `Neccesity` (
  `PK_necessity` VARCHAR(10) PRIMARY KEY,
  `necessity` VARCHAR(50),
  `price` DECIMAL(10,2),
  `description` TEXT,
  `date` DATE,
  `FK_share` VARCHAR(10),
  FOREIGN KEY (`FK_share`) REFERENCES `ShareHolder`(`PK_shareholder`)
);

FD :{ 42 -> 36, 43 } expensesLog Form(BCNF) CK:{42}
CREATE TABLE `ExpensesLog` (
  `PK_expenses` VARCHAR(10) PRIMARY KEY,
  `date` DATE,
  `FK_expenses_Neccesity_material` VARCHAR(10),
  FOREIGN KEY (`FK_expenses_Neccesity_material`) REFERENCES `Neccesity`(`PK_necessity`),
  FOREIGN KEY (`FK_expenses_Neccesity_material`) REFERENCES `MaterialsAdded`(`PK_materialAdded`)
);

FD :{ 18 ->22, 19, 20, 21 } paymentMethod Form(BCNF) CK:{18}
CREATE TABLE `PaymentMethod` (
  `PK_paymentMethod` VARCHAR(10) PRIMARY KEY,
  `paymentMethod` VARCHAR(50),
  `description` TEXT,
  `discountRate` Decimal(2,2),
  `PK_shareholder` VARCHAR(10),
  FOREIGN KEY (`PK_shareholder`) REFERENCES `ShareHolder`(`PK_shareholder`)
);

FD :{ 1 -> 2 to 62 }  Products Form(BCNF) CK:{1}
CREATE TABLE `Products` (
  `PK_productName` VARCHAR(10) PRIMARY KEY,
  `desription` TEXT,
  `price` DECIMAL(10,2),
  `stock` INT,
  `unit` VARCHAR(25),
  `status` BOOL
);

FD :{  7->1, 8 to 11  } ProductMade Form(BCNF) CK:{7}
CREATE TABLE `ProductMade` (
  `PK_productsLog` VARCHAR(10) PRIMARY KEY,
  `FK_productName` VARCHAR(50),
  `Date` DATE,
  `quantitty` INT,
  `description` TEXT,
  `status` BOOL,
  FOREIGN KEY (`FK_productName`) REFERENCES `Products`(`PK_productName`)
);

FD :{ 1, 32 -> 1, 32 } MaterialNeeded Form(2 NF) CK:{1,32}
CREATE TABLE `MaterialNeeded` (
  `FK_productName` VARCHAR(10) ,
  `FK_material` VARCHAR(10) ,
  FOREIGN KEY (`FK_productName`) REFERENCES `ProductMade`(`FK_productName`),
  FOREIGN KEY (`FK_productName`) REFERENCES `Products`(`PK_productName`),
  FOREIGN KEY (`FK_material`) REFERENCES `MaterialStats`(`PK_material`)
);

FD :{  12 ->1, 13, 14  }  Orders Form(BCNF) CK:{12}
CREATE TABLE `Orders` (
  `PK_Order` VARCHAR(10) PRIMARY KEY,
  `orderDate` DATETIME,
  `status` Bool,
  `FK_paymentMethod` VARCHAR(10),
  FOREIGN KEY (`FK_paymentMethod`) REFERENCES `PaymentMethod`(`PK_paymentMethod`)
);

FD :{  15 ->12, 18, 1, 16, 17 } orderDetails Form(BCNF) CK:{15}
CREATE TABLE `orderDetails` (
  `PK_orderDetails` VARCHAR(10) PRIMARY KEY,
  `FK_orderID` VARCHAR(10),
  `FK_productName` VARCHAR(10) ,
  `quantity` INT,
  `status` BOOL,
  FOREIGN KEY (`FK_productName`) REFERENCES `Products`(`PK_productName`),
  FOREIGN KEY (`FK_orderID`) REFERENCES `Orders`(`PK_Order`)
);
