Travel agency Tracking Database Normalization
1st Normal Form:
•	Each attribute should contain atomic value.
•	A column should contain value from the same domain.
•	Each column should have a unique name. 
•	No ordering to rows and columns.
•	No duplicate rows.
2ND Normal Form
•	It must be 1st Normal Form.
•	No Patial dependency in the relation (Partial dependency occurs when the left-hand side of a candidate key points non-prime attributes).
3rd Normal Form
•	It must be 2nd Normal Form.																         
•	No transitive dependency for non-prime attributes (To be non-transitive and 3NF at least one of these must be true: Either the left-hand side of functional dependency is super key or the right-hand side points to a prime attribute).
BCNF
•	if it is 3NF. 
•	For each functional dependency there must be a super key.
Preserving Dependency Decomposition
•	is another property of decomposed relational database schema D in which each functional dependency X -> Y specified in F either appeared directly in one of the relation schemas Ri in the decomposed D or could be inferred from the dependencies that appear in some Ri.

Lossless Join Decomposition
•	Lossless join decomposition is a decomposition of a relation R into relations R1, R2 such that if we perform a natural join of relation R1 and R2, it will return the original relation R. This is effective in removing redundancies from databases while preserving the original data.

Database Relations
R:{
	1	2	3	4	5	6	7	8	9	10	11	12	13	14	15	16	17	18	19	20	21	22	23	24	25	26
27	28	29	30	31	32	33	34	35	36	37	38	39	40	41	42	43	44	45	46	47	48	49	50	51	52	53	
54	55	56	57	58	59	60	61	62	63	64	65	66	67	68	69	70	71	72	73	74	75	76	77	78	79	80	
}
FD {1 -> 2 to 8 farmeringo,    9-> 10 to 15 farmertech,  16 ->1, 17, 18 landtiill,  19 ->1, 20, 21 contact ,  22 -> 23, 24 livestockinfo   25->26, 22, 1, 9 live stock     27 -> 28, 29, 30 brandseed  31 -> 32 33 27, 1, 9 season crop   34,-> 31, 35, 36, 37 season
38 -> 39 to 42 Companyprovider, 43 -> 1, 38, 44, 45 subsidize, 46 -> 47,48 incidentType , 49 -> 46, 1, 9 50 to 52 livestockincident, 53 -> 46, 1, 9, 54 to 56 crop incident
}

FarmersInfo

R:{
1	2	3	4	5	6	7	8
}
FD :{ 1 -> 2 to 8} Highest Normal Form(BCNF) CK:{1}
CREATE TABLE [FarmersInfo] (
  [PK_farmersInfo] INT,
  [firstName] NVARCHAR(100),
  [lastName] NVARCHAR((100,
  [middleName] Nvarchar(100),
  [Birthday] Date,
  [Block] Nvarchar(50),
  [Street] Nvarchar(50),
  [baranggay] Nvarchar(5)
);


Farm Technician
R:{
9	10	11	12	13	14	15
}	
FD:{ 9-> 10 to 15}     Highest Normal Form(BCNF) CK:{9}

CREATE TABLE [Farm Technician] (
  [PK_farmTechnician] INT PK,
  [firstname] Nvarchar(25),
  [middleName] Nvarchar(25),
  [lastName] Nvarchar(25),
  [assignBarangay] Nvarchar(10),
  [desingation] Nvarchar(25),
  [ContactNumber] Nvarchar(25)
);

LandTill	
R:{
16	17	18		
}
FD:{16 ->1, 17, 18} Highest Normal Form(BCNF) CK:{16}
CREATE TABLE [LandTill] (
  [BaranggayLocation] Nvarchar(5),
  [squareMeter] digit,
  [ProofofEntitledLand] Nvarchar(25) PK,
  [PK_farmerInfo] INT FK,
  CONSTRAINT [FK_LandTill.PK_farmerInfo]
    FOREIGN KEY ([PK_farmerInfo])
      REFERENCES [FarmersInfo]([PK_farmersInfo])
);

Contact
R:{
1	32	33								
}
FD:{19 ->1, 20, 21} Highest Normal Form(BCNF) CK:{19}
CREATE TABLE [Contact] (
  [PK_contact] INT PK,
  [Cellphone] Nvarchar(12),
  [Telcom] Nvarchar(50),
  [FK_farmerInfo] INT FK,
  CONSTRAINT [FK_Contact.FK_farmerInfo]
    FOREIGN KEY ([FK_farmerInfo])
      REFERENCES [FarmersInfo]([PK_farmersInfo])
);

Trip Details
R:{
32	33	34	35	36	37					
}
FD:{ 22 -> 23, 24} Highest Normal Form{BCNF} CK:{22}
CREATE TABLE [liveStockinfo] (
  [PK_liveStockInfo]  INT PK ,
  [liveStockinfo]  Nvarchar(50) ,
 [Description]  Nvarchar(100) 
);

Flight Details
R:{
38	39	40	41	42	43	44	45	46	47	48
}
FD:{ 38->32, 39 to 48,  40 -> 41 to 43,  44 -> 45 to 48 } Highest Normal Form{2NF} CK:{38}
CREATE TABLE `Fliigh Details` (
  `FlightID` INT PK,
  `Flight No.` NVARCHAR(10),
  `Airline` NVARCHAR(10),
  `FlightBookReference` NVARCHAR(20) FK,
  `DepartCountry` NVARCHAR(5),
  `DepartAirport` NVARCHAR(15),
  `DepartTERMINAL` NVARCHAR(15),
  `DepartDate` DateTime,
  `ArriCountry` NVARCHAR(5),
  `ArriAirport` NVARCHAR(15),
  `ArrivTERMINAL` NVARCHAR(15),
  `ArrivDate` DateTime,
  FOREIGN KEY (`FlightBookReference`) REFERENCES `Trip Details`(`FlightBookReference`)
);
Booking Details
R:{
50	1	10	22	32	38	51				
}
FD:{ 50,-> 1 10 22 32 38 51 } Highest Normal Form{BCNF} CK:{50}
CREATE TABLE `Booking Details` (
  `PK_Book` INT PK,
  `FK_PersonalData` INT FK,
  `AccomodationRef` NVARCHAR(20)  PK,
  `BookingDate` NVARCHAR(20),
  `Status` NVARCHAR(20),
  `FlightBookReference` NVARCHAR(20),
  `TourRef` NVARCHAR(20),
  FOREIGN KEY (`FlightBookReference`) REFERENCES `Trip Details`(`FlightBookReference`),
  FOREIGN KEY (`TourRef`) REFERENCES `Tours Details`(`TourRef`),
  FOREIGN KEY (`FK_PersonalData`) REFERENCES `Personal Data`(`PK_PersonalData`),
  FOREIGN KEY (`AccomodationRef`) REFERENCES `Accomodation Details`(`AccomodationRef`)
);
